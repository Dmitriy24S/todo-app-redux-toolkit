{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","id","title","completed","reducers","addTodo","state","action","todo","Date","valueOf","payload","push","toggleComplete","index","findIndex","deleteTodo","filter","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","console","log","className","type","placeholder","onChange","target","TodoItem","onClick","checked","readOnly","e","stopPropagation","TodoList","todos","useSelector","map","TotalCompleteItems","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"+MAEaA,EAAYC,YAAY,CACnCC,KAAM,QACNC,aAAc,CACZ,CAAEC,GAAI,EAAGC,MAAO,QAASC,WAAW,GACpC,CAAEF,GAAI,EAAGC,MAAO,QAASC,WAAW,GACpC,CAAEF,GAAI,EAAGC,MAAO,QAASC,WAAW,GACpC,CAAEF,GAAI,EAAGC,MAAO,QAASC,WAAW,GACpC,CAAEF,GAAI,EAAGC,MAAO,QAASC,WAAW,IAEtCC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACf,IAAMC,EAAO,CACXP,IAAI,IAAIQ,MAAOC,UACfR,MAAOK,EAAOI,QAAQT,MACtBC,WAAW,GAEbG,EAAMM,KAAKJ,IAEbK,eAAgB,SAACP,EAAOC,GACtB,IAAMO,EAAQR,EAAMS,WAAU,SAACP,GAAD,OAAUA,EAAKP,KAAOM,EAAOI,QAAQV,MACnEK,EAAMQ,GAAOX,UAAYI,EAAOI,QAAQR,WAE1Ca,WAAY,SAACV,EAAOC,GAClB,OAAOD,EAAMW,QAAO,SAACT,GAAD,OAAUA,EAAKP,KAAOM,EAAOI,QAAQV,U,EAKRJ,EAAUqB,QAAlDb,E,EAAAA,QAASQ,E,EAAAA,eAAgBG,E,EAAAA,WACzBnB,IAAf,Q,OCOesB,EAlCK,WAAO,IAAD,EACEC,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,KAGlBC,EAAWC,cAajB,OACE,uBAAMC,SAZS,SAACC,GAChBA,EAAMC,iBACNC,QAAQC,IAAI,iBAAmBR,GAC/BE,EACElB,EAAQ,CACNH,MAAOmB,KAGXC,EAAS,KAIiBQ,UAAU,wBAApC,UACE,uBAAOA,UAAU,UAAjB,uBACA,uBACEC,KAAK,OACLD,UAAU,4BACVE,YAAY,cACZX,MAAOA,EACPY,SAAU,SAACP,GAAD,OAAWJ,EAASI,EAAMQ,OAAOb,UAG7C,wBAAQU,KAAK,SAASD,UAAU,uBAAhC,wBCQSK,EAnCE,SAAC,GAA8B,IAA5BlC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACvBoB,EAAWC,cAWjB,OACE,oBAAIM,UAAS,0BAAqB3B,GAAa,2BAA/C,SACE,sBACE2B,UAAU,iCACVM,QAbsB,WAC1Bb,EAASV,EAAe,CAAEZ,KAAIE,WAAYA,MAUxC,UAIE,uBAAM2B,UAAU,4BAAhB,UACE,uBACEC,KAAK,WACLD,UAAU,OACVO,QAASlC,EACTmC,UAAQ,IAETpC,KAEH,wBAAQ4B,UAAU,iBAAiBM,QApBf,SAACG,GACzBA,EAAEC,kBACFjB,EAASP,EAAW,CAAEf,SAkBlB,0BCFOwC,EAzBE,WASf,IAAMC,EAAQC,aAAY,SAACrC,GAAD,OAAWA,EAAMoC,SAE3C,OACE,oBAAIZ,UAAU,aAAd,SACGY,EAAME,KAAI,SAACpC,EAAMP,GAAP,OACT,cAAC,EAAD,CAEEA,GAAIO,EAAKP,GACTC,MAAOM,EAAKN,MACZC,UAAWK,EAAKL,WAHXF,SCTA4C,EAPY,WACzB,IAAMH,EAAQC,aAAY,SAACrC,GAAD,OACxBA,EAAMoC,MAAMzB,QAAO,SAACT,GAAD,OAA6B,IAAnBA,EAAKL,gBAEpC,OAAO,qBAAI2B,UAAU,OAAd,mCAA4CY,EAAMI,WCU5CC,EAXH,WACV,OACE,sBAAKjB,UAAU,mCAAf,UACE,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCTSkB,cAAe,CAC5BC,QAAS,CACPP,MAAOQ,KCEXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.d715e9fa.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [\n    { id: 1, title: \"todo1\", completed: false },\n    { id: 2, title: \"todo2\", completed: false },\n    { id: 3, title: \"todo3\", completed: true },\n    { id: 4, title: \"todo4\", completed: true },\n    { id: 5, title: \"todo5\", completed: false },\n  ],\n  reducers: {\n    addTodo: (state, action) => {\n      const todo = {\n        id: new Date().valueOf(),\n        title: action.payload.title,\n        completed: false,\n      };\n      state.push(todo);\n    },\n    toggleComplete: (state, action) => {\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    deleteTodo: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\nexport default todoSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/todoSlice\";\n\nconst AddTodoForm = () => {\n  const [value, setValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"user entered: \" + value);\n    dispatch(\n      addTodo({\n        title: value,\n      })\n    );\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"form-inline mt-3 mb-3\">\n      <label className=\"sr-only\">Todo Name</label>\n      <input\n        type=\"text\"\n        className=\"form-control mb-2 mr-sm-2\"\n        placeholder=\"Add todo...\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      ></input>\n\n      <button type=\"submit\" className=\"btn btn-primary mb-2\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n","import React from \"react\";\nimport { deleteTodo, toggleComplete } from \"../redux/todoSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst TodoItem = ({ id, title, completed }) => {\n  const dispatch = useDispatch();\n\n  const handleCheckboxClick = () => {\n    dispatch(toggleComplete({ id, completed: !completed }));\n  };\n\n  const handleDeleteClick = (e) => {\n    e.stopPropagation();\n    dispatch(deleteTodo({ id }));\n  };\n\n  return (\n    <li className={`list-group-item ${completed && \"list-group-item-success\"}`}>\n      <div\n        className=\"d-flex justify-content-between\"\n        onClick={handleCheckboxClick}\n      >\n        <span className=\"d-flex align-items-center\">\n          <input\n            type=\"checkbox\"\n            className=\"mr-3\"\n            checked={completed}\n            readOnly\n          ></input>\n          {title}\n        </span>\n        <button className=\"btn btn-danger\" onClick={handleDeleteClick}>\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { useSelector } from \"react-redux\";\n\nconst TodoList = () => {\n  // const todos = [\n  // \t{ id: 1, title: 'todo1', completed: false },\n  // \t{ id: 2, title: 'todo2', completed: false },\n  // \t{ id: 3, title: 'todo3', completed: true },\n  // \t{ id: 4, title: 'todo4', completed: false },\n  // \t{ id: 5, title: 'todo5', completed: false },\n  // ];\n\n  const todos = useSelector((state) => state.todos);\n\n  return (\n    <ul className=\"list-group\">\n      {todos.map((todo, id) => (\n        <TodoItem\n          key={id}\n          id={todo.id}\n          title={todo.title}\n          completed={todo.completed}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst TotalCompleteItems = () => {\n  const todos = useSelector((state) =>\n    state.todos.filter((todo) => todo.completed === true)\n  );\n  return <h4 className=\"mt-3\">Total Complete Items: {todos.length}</h4>;\n};\n\nexport default TotalCompleteItems;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AddTodoForm from \"./components/AddTodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport TotalCompleteItems from \"./components/TotalCompleteItems\";\n\nconst App = () => {\n  return (\n    <div className=\"container bg-white p-4 mt-5 mb-5\">\n      <h1>My Todo List</h1>\n      <AddTodoForm />\n      <TodoList />\n      <TotalCompleteItems />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./todoSlice\";\n\nexport default configureStore({\n  reducer: {\n    todos: todoReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}